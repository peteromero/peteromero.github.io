(undo-tree-save-format-version . 1)
"0e0081508246a971a8408395e726ff2ac88fab16"
[nil nil nil nil (26767 31407 280996 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 1580 . 1581) (nil fontified nil 1 . 1581) (1 . 1581)) nil (26767 31716 404664 0) 0 nil] [nil nil ((nil rear-nonsticky nil 1137 . 1138) (nil fontified nil 1 . 1138) (1 . 1138) (t . -1)) ((#("<!DOCTYPE html>
<html lang=\"en\">
<head>
  <meta charset=\"UTF-8\">
  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">
  <title>Peter Romero — Machine Psychology</title>
</head>
<body>
  <h1>Machine Psychology</h1>
  <p>This site represents the emerging field of <strong>Machine Psychology</strong>—a research program at the intersection of AI evaluation, psychometrics, and cognitive architectures. It builds on rigorous methods from behavioral science to understand and shape intelligent behavior in artificial systems.</p>

  <h2>About Me</h2>
  <p>I am Peter Romero, PhD, an AI scientist based at VRAIN and affiliated with the University of Cambridge. My work focuses on applying psychometrics to AI systems, with the goal of building robust frameworks for evaluating and shaping machine behavior. My background spans psychology, econometrics, and AI safety, and I am one of the early contributors to the field of machine personality and synthetic cognitive traits in LLMs.</p>

  <p>This page will soon evolve into the public front of my labs and collaborations. For now, it marks the beginning.</p>
</body>
</html>" 0 1 (fontified nil syntax-table (15 . 62) wrap-prefix "") 1 9 (fontified nil face font-lock-keyword-face wrap-prefix "") 9 14 (fontified nil wrap-prefix "") 14 15 (fontified nil syntax-table (15 . 60) wrap-prefix "") 15 16 (fontified nil wrap-prefix "") 16 17 (fontified nil wrap-prefix "") 17 21 (fontified nil face font-lock-function-name-face wrap-prefix "") 21 22 (fontified nil wrap-prefix "") 22 26 (fontified nil face font-lock-variable-name-face wrap-prefix "") 26 27 (fontified nil wrap-prefix "") 27 31 (fontified nil face font-lock-string-face wrap-prefix "") 31 33 (fontified nil wrap-prefix "") 33 34 (fontified nil wrap-prefix "") 34 38 (fontified nil face font-lock-function-name-face wrap-prefix "") 38 40 (fontified nil wrap-prefix "") 40 43 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 43 47 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 47 48 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 48 55 (fontified nil face font-lock-variable-name-face wrap-prefix #("  " 0 2 (fontified t))) 55 56 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 56 63 (fontified nil face font-lock-string-face wrap-prefix #("  " 0 2 (fontified t))) 63 65 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 65 68 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 68 72 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 72 73 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 73 77 (fontified nil face font-lock-variable-name-face wrap-prefix #("  " 0 2 (fontified t))) 77 78 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 78 88 (fontified nil face font-lock-string-face wrap-prefix #("  " 0 2 (fontified t))) 88 89 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 89 96 (fontified nil face font-lock-variable-name-face wrap-prefix #("  " 0 2 (fontified t))) 96 97 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 97 134 (fontified nil face font-lock-string-face wrap-prefix #("  " 0 2 (fontified t))) 134 136 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 136 139 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 139 144 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 144 145 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 145 178 (fontified nil face (bold underline) wrap-prefix #("  " 0 2 (fontified t))) 178 180 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 180 185 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 185 187 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 187 189 (fontified nil wrap-prefix "") 189 193 (fontified nil face font-lock-function-name-face wrap-prefix "") 193 195 (fontified nil wrap-prefix "") 195 196 (fontified nil wrap-prefix "") 196 200 (fontified nil face font-lock-function-name-face wrap-prefix "") 200 202 (fontified nil wrap-prefix "") 202 205 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 205 207 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 207 208 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 208 226 (fontified nil face (bold underline) wrap-prefix #("  " 0 2 (fontified t))) 226 228 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 228 230 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 230 232 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 232 235 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 235 236 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 236 281 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 281 287 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 287 288 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 288 306 (fontified nil face (bold) wrap-prefix #("  " 0 2 (fontified t))) 306 308 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 308 314 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 314 540 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 540 541 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 541 543 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 543 544 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 544 547 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 547 549 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 549 550 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 550 558 (fontified nil face (bold-italic underline) wrap-prefix #("  " 0 2 (fontified t))) 558 560 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 560 562 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 562 564 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 564 567 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 567 568 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 568 996 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 996 997 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 997 999 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 999 1000 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 1000 1003 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 1003 1004 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 1004 1119 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 1119 1120 (fontified nil face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 1120 1122 (fontified nil wrap-prefix #("  " 0 2 (fontified t))) 1122 1124 (fontified nil wrap-prefix "") 1124 1128 (fontified nil face font-lock-function-name-face wrap-prefix "") 1128 1130 (fontified nil wrap-prefix "") 1130 1132 (fontified nil wrap-prefix "") 1132 1136 (fontified nil wrap-prefix "" face font-lock-function-name-face) 1136 1137 (fontified nil rear-nonsticky nil wrap-prefix "")) . 1) (undo-tree-id10 . -1137) (undo-tree-id11 . -1137) (undo-tree-id12 . -1136) (undo-tree-id13 . -1136) (undo-tree-id14 . -1136) (undo-tree-id15 . -1136) (undo-tree-id16 . -1136) (undo-tree-id17 . -1136) (undo-tree-id18 . -1136) (undo-tree-id19 . -1136) (undo-tree-id20 . -1136) (undo-tree-id21 . -1136) (undo-tree-id22 . -1136) (undo-tree-id23 . -1136) (undo-tree-id24 . -1136) (undo-tree-id25 . -1136) (undo-tree-id26 . -1128) (undo-tree-id27 . -1128) (undo-tree-id28 . -1128) (undo-tree-id29 . -1128) (undo-tree-id30 . -1128) (undo-tree-id31 . -1128) (undo-tree-id32 . -1128) (undo-tree-id33 . -1128) (undo-tree-id34 . -1128) (undo-tree-id35 . -1128) (undo-tree-id36 . -1006) (undo-tree-id37 . -1006) (undo-tree-id38 . -1006) (undo-tree-id39 . -1006) (undo-tree-id40 . -1006) (undo-tree-id41 . -999) (undo-tree-id42 . -999) (undo-tree-id43 . -999) (undo-tree-id44 . -999) (undo-tree-id45 . -999) (undo-tree-id46 . -570) (undo-tree-id47 . -570) (undo-tree-id48 . -570) (undo-tree-id49 . -570) (undo-tree-id50 . -570) (undo-tree-id51 . -550) (undo-tree-id52 . -550) (undo-tree-id53 . -550) (undo-tree-id54 . -550) (undo-tree-id55 . -550) (undo-tree-id56 . -543) (undo-tree-id57 . -543) (undo-tree-id58 . -543) (undo-tree-id59 . -543) (undo-tree-id60 . -543) (undo-tree-id61 . -238) (undo-tree-id62 . -238) (undo-tree-id63 . -238) (undo-tree-id64 . -238) (undo-tree-id65 . -238) (undo-tree-id66 . -208) (undo-tree-id67 . -208) (undo-tree-id68 . -208) (undo-tree-id69 . -208) (undo-tree-id70 . -208) (undo-tree-id71 . -200) (undo-tree-id72 . -200) (undo-tree-id73 . -200) (undo-tree-id74 . -200) (undo-tree-id75 . -200) (undo-tree-id76 . -193) (undo-tree-id77 . -193) (undo-tree-id78 . -193) (undo-tree-id79 . -193) (undo-tree-id80 . -193) (undo-tree-id81 . -193) (undo-tree-id82 . -193) (undo-tree-id83 . -193) (undo-tree-id84 . -193) (undo-tree-id85 . -193) (undo-tree-id86 . -142) (undo-tree-id87 . -142) (undo-tree-id88 . -142) (undo-tree-id89 . -142) (undo-tree-id90 . -142) (undo-tree-id91 . -142) (undo-tree-id92 . -142) (undo-tree-id93 . -142) (undo-tree-id94 . -142) (undo-tree-id95 . -142) (undo-tree-id96 . -143) (undo-tree-id97 . -143) (undo-tree-id98 . -143) (undo-tree-id99 . -143) (undo-tree-id100 . -143) (undo-tree-id101 . -143) (undo-tree-id102 . -143) (undo-tree-id103 . -143) (undo-tree-id104 . -143) (undo-tree-id105 . -143) (undo-tree-id106 . -144) (undo-tree-id107 . -144) (undo-tree-id108 . -144) (undo-tree-id109 . -144) (undo-tree-id110 . -144) (undo-tree-id111 . -145) (undo-tree-id112 . -145) (undo-tree-id113 . -145) (undo-tree-id114 . -145) (undo-tree-id115 . -145) (undo-tree-id116 . -146) (undo-tree-id117 . -146) (undo-tree-id118 . -146) (undo-tree-id119 . -146) (undo-tree-id120 . -146) (undo-tree-id121 . -146) (undo-tree-id122 . -146) (undo-tree-id123 . -146) (undo-tree-id124 . -146) (undo-tree-id125 . -146) (undo-tree-id126 . -146) (undo-tree-id127 . -146) (undo-tree-id128 . -146) (undo-tree-id129 . -146) (undo-tree-id130 . -146) (undo-tree-id131 . -146) (undo-tree-id132 . -146) (undo-tree-id133 . -146) (undo-tree-id134 . -146) (undo-tree-id135 . -146) (undo-tree-id136 . -146) (undo-tree-id137 . -146) (undo-tree-id138 . -146) (undo-tree-id139 . -146) (undo-tree-id140 . -146) (undo-tree-id141 . -146) (undo-tree-id142 . -146) (undo-tree-id143 . -146) (undo-tree-id144 . -146) (undo-tree-id145 . -146) (undo-tree-id146 . -146) (undo-tree-id147 . -146) (undo-tree-id148 . -146) (undo-tree-id149 . -146) (undo-tree-id150 . -146) (undo-tree-id151 . -146) (undo-tree-id152 . -146) (undo-tree-id153 . -146) (undo-tree-id154 . -146) (undo-tree-id155 . -146) (undo-tree-id156 . -146) (undo-tree-id157 . -146) (undo-tree-id158 . -146) (undo-tree-id159 . -146) (undo-tree-id160 . -146) (undo-tree-id161 . -146) (undo-tree-id162 . -146) (undo-tree-id163 . -146) (undo-tree-id164 . -146) (undo-tree-id165 . -146) (undo-tree-id166 . -146) (undo-tree-id167 . -146) (undo-tree-id168 . -146) (undo-tree-id169 . -146) (undo-tree-id170 . -146) (undo-tree-id171 . -146) (undo-tree-id172 . -146) (undo-tree-id173 . -146) (undo-tree-id174 . -146) (undo-tree-id175 . -146) (undo-tree-id176 . -146) (undo-tree-id177 . -146) (undo-tree-id178 . -146) (undo-tree-id179 . -146) (undo-tree-id180 . -146) (undo-tree-id181 . -146) (undo-tree-id182 . -146) (undo-tree-id183 . -146) (undo-tree-id184 . -146) (undo-tree-id185 . -146) (undo-tree-id186 . -146) (undo-tree-id187 . -146) (undo-tree-id188 . -146) (undo-tree-id189 . -146) (undo-tree-id190 . -146) (undo-tree-id191 . -146) (undo-tree-id192 . -146) (undo-tree-id193 . -146) (undo-tree-id194 . -146) (undo-tree-id195 . -146) (undo-tree-id196 . -146) (undo-tree-id197 . -146) (undo-tree-id198 . -146) (undo-tree-id199 . -146) (undo-tree-id200 . -146) (undo-tree-id201 . -146) (undo-tree-id202 . -146) (undo-tree-id203 . -146) (undo-tree-id204 . -146) (undo-tree-id205 . -146) (undo-tree-id206 . -146) (undo-tree-id207 . -146) (undo-tree-id208 . -146) (undo-tree-id209 . -146) (undo-tree-id210 . -146) (undo-tree-id211 . -146) (undo-tree-id212 . -146) (undo-tree-id213 . -146) (undo-tree-id214 . -146) (undo-tree-id215 . -146) (undo-tree-id216 . -146) (undo-tree-id217 . -146) (undo-tree-id218 . -146) (undo-tree-id219 . -146) (undo-tree-id220 . -146) (undo-tree-id221 . -146) (undo-tree-id222 . -146) (undo-tree-id223 . -146) (undo-tree-id224 . -146) (undo-tree-id225 . -146) (undo-tree-id226 . -146) (undo-tree-id227 . -146) (undo-tree-id228 . -146) (undo-tree-id229 . -146) (undo-tree-id230 . -146) (undo-tree-id231 . -146) (undo-tree-id232 . -146) (undo-tree-id233 . -146) (undo-tree-id234 . -146) (undo-tree-id235 . -146) (undo-tree-id236 . -146) (undo-tree-id237 . -146) (undo-tree-id238 . -146) (undo-tree-id239 . -146) (undo-tree-id240 . -146) (undo-tree-id241 . -146) (undo-tree-id242 . -146) (undo-tree-id243 . -146) (undo-tree-id244 . -146) (undo-tree-id245 . -146) (undo-tree-id246 . -146) (undo-tree-id247 . -146) (undo-tree-id248 . -146) (undo-tree-id249 . -146) (undo-tree-id250 . -146) (undo-tree-id251 . -146) (undo-tree-id252 . -146) (undo-tree-id253 . -146) (undo-tree-id254 . -146) (undo-tree-id255 . -146) (undo-tree-id256 . -146) (undo-tree-id257 . -146) (undo-tree-id258 . -146) (undo-tree-id259 . -146) (undo-tree-id260 . -146) (undo-tree-id261 . -146) (undo-tree-id262 . -146) (undo-tree-id263 . -146) (undo-tree-id264 . -146) (undo-tree-id265 . -146) (undo-tree-id266 . -146) (undo-tree-id267 . -146) (undo-tree-id268 . -146) (undo-tree-id269 . -146) (undo-tree-id270 . -146) (undo-tree-id271 . -146) (undo-tree-id272 . -146) (undo-tree-id273 . -146) (undo-tree-id274 . -146) (undo-tree-id275 . -146) (undo-tree-id276 . -146) (undo-tree-id277 . -146) (undo-tree-id278 . -146) (undo-tree-id279 . -146) (undo-tree-id280 . -146) (undo-tree-id281 . -146) (undo-tree-id282 . -146) (undo-tree-id283 . -146) (undo-tree-id284 . -146) (undo-tree-id285 . -146) (undo-tree-id286 . -146) (undo-tree-id287 . -146) (undo-tree-id288 . -146) (undo-tree-id289 . -146) (undo-tree-id290 . -146) (undo-tree-id291 . -146) (undo-tree-id292 . -146) (undo-tree-id293 . -146) (undo-tree-id294 . -146) (undo-tree-id295 . -146) (undo-tree-id296 . -146) (undo-tree-id297 . -146) (undo-tree-id298 . -146) (undo-tree-id299 . -146) (undo-tree-id300 . -146) (undo-tree-id301 . -146) (undo-tree-id302 . -146) (undo-tree-id303 . -146) (undo-tree-id304 . -146) (undo-tree-id305 . -146) (undo-tree-id306 . -146) (undo-tree-id307 . -146) (undo-tree-id308 . -146) (undo-tree-id309 . -146) (undo-tree-id310 . -146) (undo-tree-id311 . -146) (undo-tree-id312 . -146) (undo-tree-id313 . -146) (undo-tree-id314 . -146) (undo-tree-id315 . -146) (undo-tree-id316 . -146) (undo-tree-id317 . -146) (undo-tree-id318 . -146) (undo-tree-id319 . -146) (undo-tree-id320 . -146) (undo-tree-id321 . -146) (undo-tree-id322 . -146) (undo-tree-id323 . -146) (undo-tree-id324 . -146) (undo-tree-id325 . -146) (undo-tree-id326 . -146) (undo-tree-id327 . -146) (undo-tree-id328 . -146) (undo-tree-id329 . -146) (undo-tree-id330 . -146) (undo-tree-id331 . -146) (undo-tree-id332 . -146) (undo-tree-id333 . -146) (undo-tree-id334 . -146) (undo-tree-id335 . -146) (undo-tree-id336 . -146) (undo-tree-id337 . -146) (undo-tree-id338 . -146) (undo-tree-id339 . -146) (undo-tree-id340 . -146) (undo-tree-id341 . -146) (undo-tree-id342 . -146) (undo-tree-id343 . -146) (undo-tree-id344 . -146) (undo-tree-id345 . -146) (undo-tree-id346 . -146) (undo-tree-id347 . -146) (undo-tree-id348 . -146) (undo-tree-id349 . -1130) (undo-tree-id350 . -1136) (undo-tree-id351 . -1136) (undo-tree-id352 . -1136) (undo-tree-id353 . -1136) (undo-tree-id354 . -1136) (undo-tree-id355 . -1136) (undo-tree-id356 . 1) (undo-tree-id357 . -1137) (undo-tree-id358 . 7) (undo-tree-id359 . -1131) (undo-tree-id360 . -1136) (undo-tree-id361 . -1136) (undo-tree-id362 . -1136) (undo-tree-id363 . -1136) (undo-tree-id364 . -1136) (undo-tree-id365 . -1136) (undo-tree-id366 . -1136) (undo-tree-id367 . -1136) (undo-tree-id368 . -1136) (undo-tree-id369 . -1136) (undo-tree-id370 . -1136) (nil fontified t 1129 . 1131) (nil fontified t 1125 . 1129) (nil fontified t 1123 . 1125) (nil fontified t 1121 . 1123) (nil fontified t 1120 . 1121) (nil fontified t 1005 . 1120) (nil fontified t 1004 . 1005) (nil fontified t 1001 . 1004) (nil fontified t 1000 . 1001) (nil fontified t 998 . 1000) (nil fontified t 997 . 998) (nil fontified t 569 . 997) (nil fontified t 568 . 569) (nil fontified t 565 . 568) (nil fontified t 563 . 565) (nil fontified t 561 . 563) (nil fontified t 559 . 561) (nil fontified t 551 . 559) (nil fontified t 550 . 551) (nil fontified t 548 . 550) (nil fontified t 545 . 548) (nil fontified t 544 . 545) (nil fontified t 542 . 544) (nil fontified t 541 . 542) (nil fontified t 315 . 541) (nil fontified t 309 . 315) (nil fontified t 307 . 309) (nil fontified t 289 . 307) (nil fontified t 288 . 289) (nil fontified t 282 . 288) (nil fontified t 237 . 282) (nil fontified t 236 . 237) (nil fontified t 233 . 236) (nil fontified t 231 . 233) (nil fontified t 229 . 231) (nil fontified t 227 . 229) (nil fontified t 209 . 227) (nil fontified t 208 . 209) (nil fontified t 206 . 208) (nil fontified t 203 . 206) (nil fontified t 201 . 203) (nil fontified t 197 . 201) (nil fontified t 196 . 197) (nil fontified t 194 . 196) (nil fontified t 190 . 194) (nil fontified t 188 . 190) (nil fontified t 186 . 188) (nil fontified t 181 . 186) (nil fontified t 179 . 181) (nil fontified t 146 . 179) (nil fontified t 145 . 146) (nil fontified t 140 . 145) (nil fontified t 137 . 140) (nil fontified t 135 . 137) (nil fontified t 98 . 135) (nil fontified t 97 . 98) (nil fontified t 90 . 97) (nil fontified t 89 . 90) (nil fontified t 79 . 89) (nil fontified t 78 . 79) (nil fontified t 74 . 78) (nil fontified t 73 . 74) (nil fontified t 69 . 73) (nil fontified t 66 . 69) (nil fontified t 64 . 66) (nil fontified t 57 . 64) (nil fontified t 56 . 57) (nil fontified t 49 . 56) (nil fontified t 48 . 49) (nil fontified t 44 . 48) (nil fontified t 41 . 44) (nil fontified t 39 . 41) (nil fontified t 35 . 39) (nil fontified t 34 . 35) (nil fontified t 32 . 34) (nil fontified t 28 . 32) (nil fontified t 27 . 28) (nil fontified t 23 . 27) (nil fontified t 22 . 23) (nil fontified t 18 . 22) (nil fontified t 17 . 18) (nil fontified t 16 . 17) (nil fontified t 15 . 16) (nil fontified t 10 . 15) (nil fontified t 2 . 10) (nil fontified t 1 . 2) (nil rear-nonsticky t 1137 . 1138)) (26767 31406 709799 0) 0 nil] [nil nil ((nil rear-nonsticky nil 282 . 283) (nil fontified nil 1 . 283) (1 . 283) (t . -1)) ((#("<!DOCTYPE html>
<html>
  <head>
    <meta charset=\"UTF-8\" />
    <title>Machine Psychology Labs</title>
  </head>
  <body>
    <h1>Welcome to Machine Psychology Labs</h1>
    <p>Coming soon: research at the intersection of psychometrics, consciousness, and AI.</p>
  </body>
</html>" 0 1 (fontified nil syntax-table (15 . 62)) 1 9 (fontified nil face font-lock-keyword-face) 9 14 (fontified nil) 14 15 (fontified nil syntax-table (15 . 60)) 15 17 (fontified nil) 17 21 (fontified nil face font-lock-function-name-face) 21 26 (fontified nil) 26 30 (fontified nil face font-lock-function-name-face) 30 37 (fontified nil) 37 41 (fontified nil face font-lock-function-name-face) 41 42 (fontified nil) 42 49 (fontified nil face font-lock-variable-name-face) 49 50 (fontified nil) 50 57 (fontified nil face font-lock-string-face) 57 66 (fontified nil) 66 71 (fontified nil face font-lock-function-name-face) 71 72 (fontified nil) 72 95 (fontified nil face (bold underline)) 95 97 (fontified nil) 97 102 (fontified nil face font-lock-function-name-face) 102 108 (fontified nil) 108 112 (fontified nil face font-lock-function-name-face) 112 117 (fontified nil) 117 121 (fontified nil face font-lock-function-name-face) 121 128 (fontified nil) 128 130 (fontified nil face font-lock-function-name-face) 130 131 (fontified nil) 131 165 (fontified nil face (bold underline)) 165 167 (fontified nil) 167 169 (fontified nil face font-lock-function-name-face) 169 176 (fontified nil) 176 177 (fontified nil face font-lock-function-name-face) 177 262 (fontified nil) 262 263 (fontified nil face font-lock-function-name-face) 263 269 (fontified nil) 269 273 (fontified nil face font-lock-function-name-face) 273 275 (fontified nil) 275 277 (fontified nil) 277 281 (fontified nil face font-lock-function-name-face) 281 282 (fontified nil rear-nonsticky nil)) . 1) (undo-tree-id0 . -95) (undo-tree-id1 . -281) (undo-tree-id2 . -61) (undo-tree-id3 . 187) (undo-tree-id4 . -96) (undo-tree-id5 . 180) (undo-tree-id6 . -103) (undo-tree-id7 . -95) (nil fontified t 274 . 276) (nil fontified t 270 . 274) (nil fontified t 264 . 270) (nil fontified t 263 . 264) (nil fontified t 178 . 263) (nil fontified t 177 . 178) (nil fontified t 170 . 177) (nil fontified t 168 . 170) (nil fontified t 166 . 168) (nil fontified t 132 . 166) (nil fontified t 131 . 132) (nil fontified t 129 . 131) (nil fontified t 122 . 129) (nil fontified t 118 . 122) (nil fontified t 113 . 118) (nil fontified t 109 . 113) (nil fontified t 103 . 109) (nil fontified t 98 . 103) (nil fontified t 96 . 98) (nil fontified t 73 . 96) (nil fontified t 72 . 73) (nil fontified t 67 . 72) (nil fontified t 58 . 67) (nil fontified t 51 . 58) (nil fontified t 50 . 51) (nil fontified t 43 . 50) (nil fontified t 42 . 43) (nil fontified t 38 . 42) (nil fontified t 31 . 38) (nil fontified t 27 . 31) (nil fontified t 22 . 27) (nil fontified t 18 . 22) (nil fontified t 16 . 18) (nil fontified t 15 . 16) (nil fontified t 10 . 15) (nil fontified t 2 . 10) (nil fontified t 1 . 2) (nil rear-nonsticky t 282 . 283)) (26767 31321 490080 0) 0 nil])
([nil nil ((1405 . 1407) (#(" " 0 1 (fontified nil wrap-prefix #("  " 0 2 (fontified t)))) . 1404) (undo-tree-id657 . -1) (1405 . 1406) (1396 . 1405) (#("e" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -1396) (undo-tree-id658 . -1) (#("n" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -1397) (undo-tree-id659 . -1) (#("c" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -1398) (undo-tree-id660 . -1) (#("e" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -1399) (undo-tree-id661 . -1) (#(" " 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -1400) (undo-tree-id662 . -1) 1401 (1384 . 1401) (1363 . 1384) (1342 . 1363) (884 . 885) (#("t" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -884) (undo-tree-id663 . -1) (undo-tree-id664 . -1) 885 (#("<" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -933) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (#("/" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -934) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (#("s" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face)) . -935) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (#("t" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face)) . -936) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (#("r" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face)) . -937) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (#("o" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face)) . -938) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (#("n" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face)) . -939) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (#("g" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face)) . -940) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (#(">" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -941) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . 1) (undo-tree-id684 . -1) 942 (#("<" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -846) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (#("s" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face)) . -847) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (#("t" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face)) . -848) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (#("r" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face)) . -849) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (#("o" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face)) . -850) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (#("n" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face)) . -851) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (#("g" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face)) . -852) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (#(">" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -853) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . 1) (undo-tree-id702 . -1) 854) nil (26767 31716 404661 0) 0 nil])
([nil nil ((1138 . 1139)) ((#("
" 0 1 (fontified t wrap-prefix "")) . 1138) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (t 26767 31328 513017 273000)) (26767 31328 511344 0) 0 nil])
nil
([nil nil ((1081 . 1091) (#("e" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -1081) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (#("m" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -1082) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (#("e" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -1083) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (#("r" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -1084) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (#("g" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -1085) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (#("e" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -1086) (undo-tree-id656 . -1) 1087 (1081 . 1087) (1079 . 1082)) nil (26767 31716 404645 0) 0 nil])
nil
([nil nil ((1130 . 1149) (1127 . 1130)) nil (26767 31716 404639 0) 0 nil])
([nil nil ((592 . 600) (#("l" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -592) (undo-tree-id638 . -1) (#("a" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -593) (undo-tree-id639 . -1) 594 (587 . 594) (#("e" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -587) (undo-tree-id640 . -1) 588 (582 . 588)) nil (26767 31716 404639 0) 0 nil])
([nil nil ((#("personality " 0 12 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . 1054) (undo-tree-id637 . -11)) nil (26767 31716 404637 0) 0 nil])
([nil nil ((1054 . 1061)) nil (26767 31716 404636 0) 0 nil])
([nil nil ((1354 . 1361) (1333 . 1354)) nil (26767 31716 404636 0) 0 nil])
([nil nil ((1571 . 1572) (#("," 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1571) (undo-tree-id553 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1572) (undo-tree-id554 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1573) (undo-tree-id555 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1574) (undo-tree-id556 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1575) (undo-tree-id557 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1576) (undo-tree-id558 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1577) (undo-tree-id559 . -1) (#("b" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1578) (undo-tree-id560 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1579) (undo-tree-id561 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1580) (undo-tree-id562 . -1) 1581 (1561 . 1581) (#("a" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1561) (undo-tree-id563 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1562) (undo-tree-id564 . -1) 1563 (#("g" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1563) (undo-tree-id565 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1564) (undo-tree-id566 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1565) (undo-tree-id567 . -1) 1566 (1556 . 1566) (#("i" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1556) (undo-tree-id568 . -1) 1557 (1553 . 1557) (1532 . 1553) (1511 . 1532) (1491 . 1511) (#("s" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1491) (undo-tree-id569 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1492) (undo-tree-id570 . -1) 1493 (1486 . 1493) (1465 . 1486) (1448 . 1465) (1440 . 1448) (1419 . 1440) (#("M" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1419) (undo-tree-id571 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1420) (undo-tree-id572 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1421) (undo-tree-id573 . -1) 1422 (1419 . 1422) (#("M" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1419) (undo-tree-id574 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1420) (undo-tree-id575 . -1) 1421 (1419 . 1421) (#("M" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1419) (undo-tree-id576 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1420) (undo-tree-id577 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1421) (undo-tree-id578 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1422) (undo-tree-id579 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1423) (undo-tree-id580 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1424) (undo-tree-id581 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1425) (undo-tree-id582 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1426) (undo-tree-id583 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1427) (undo-tree-id584 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1428) (undo-tree-id585 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1429) (undo-tree-id586 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1430) (undo-tree-id587 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1431) (undo-tree-id588 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1432) (undo-tree-id589 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1433) (undo-tree-id590 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1434) (undo-tree-id591 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1435) (undo-tree-id592 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1436) (undo-tree-id593 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1437) (undo-tree-id594 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1438) (undo-tree-id595 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1439) (undo-tree-id596 . -1) 1440 (#("n" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1440) (undo-tree-id597 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1441) (undo-tree-id598 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1442) (undo-tree-id599 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1443) (undo-tree-id600 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1444) (undo-tree-id601 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1445) (undo-tree-id602 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1446) (undo-tree-id603 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1447) (undo-tree-id604 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1448) (undo-tree-id605 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1449) (undo-tree-id606 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1450) (undo-tree-id607 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1451) (undo-tree-id608 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1452) (undo-tree-id609 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1453) (undo-tree-id610 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1454) (undo-tree-id611 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1455) (undo-tree-id612 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1456) (undo-tree-id613 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1457) (undo-tree-id614 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1458) (undo-tree-id615 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1459) (undo-tree-id616 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1460) (undo-tree-id617 . -1) 1461 (#("v" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1461) (undo-tree-id618 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1462) (undo-tree-id619 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1463) (undo-tree-id620 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1464) (undo-tree-id621 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1465) (undo-tree-id622 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1466) (undo-tree-id623 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1467) (undo-tree-id624 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1468) (undo-tree-id625 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1469) (undo-tree-id626 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1470) (undo-tree-id627 . -1) (#("g" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1471) (undo-tree-id628 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1472) (undo-tree-id629 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1473) (undo-tree-id630 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1474) (undo-tree-id631 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1475) (undo-tree-id632 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1476) (undo-tree-id633 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1477) (undo-tree-id634 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1478) (undo-tree-id635 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1479) (undo-tree-id636 . -1) 1480) nil (26767 31716 404628 0) 0 nil])
([nil nil ((1579 . 1596) (1566 . 1579)) nil (26767 31716 404597 0) 0 nil])
([nil nil ((1566 . 1569) (#("b" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1566) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1567) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -1568) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) 1569) nil (26767 31716 404593 0) 0 nil])
([nil nil ((1565 . 1566)) nil (26767 31716 404536 0) 0 nil])
([nil nil ((1828 . 1829)) nil (26767 31716 404533 0) 0 nil])
([nil nil ((1829 . 1831) (t 26767 31716 407949 408000)) nil (26767 31975 804979 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3630 . 3631) (nil fontified nil 1831 . 3631) (1831 . 3631)) nil (26767 31975 804978 0) 0 nil])
([nil nil ((2946 . 2950) (#("—" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -2946) (undo-tree-id2813 . -1) 2947 (2921 . 2922) (2919 . 2922) (#("—" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -2919) (undo-tree-id2814 . -1) 2920) nil (26767 31975 804977 0) 0 nil])
([nil nil ((2082 . 2083) (2081 . 2083) (2078 . 2081)) nil (26767 31975 804976 0) 0 nil])
([nil nil ((2088 . 2090) (#("g" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -2088) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (#("e" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -2089) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (#("r" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -2090) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (#(" " 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -2091) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) 2092 (2084 . 2092)) nil (26767 31975 804972 0) 0 nil])
([nil nil ((#("<!DOCTYPE html>
<html lang=\"en\">
<head>
  <meta charset=\"UTF-8\">
  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">
  <title>Peter Romero — Machine Psychology</title>
</head>
<body>
  <h1>Machine Psychology & Consciousness</h1>
  <p>This site marks the foundation of <strong>Machine Psychology</strong> and <strong>Machine Consciousness</strong> as unified research domains. Together, they explore the behavioral, cognitive, and phenomenological dimensions of artificial systems. Drawing on rigorous methodologies from psychometrics, neuroscience, and AI safety and AI evaluation, these fields aim to establish principled frameworks for understanding, evaluating, and shaping the behavior and internal representations of intelligent machines.</p>

  <h2>About Me</h2>
  <p>I am <strong>Peter Romero, PhD</strong>, an AI scientist at VRAIN and Researcher & People Analytics Lead at The Psychometrics Centre, University of Cambridge. My work focuses on applying psychometrics to AI systems, developing novel methods to model synthetic latent traits, and evaluating emergent (collective) behaviors in large language models and artificial agents. I am among the first contributors to the study of split personality, behavioral shaping, and latent trait control in LLMs. I also work on measuring machine consciousness and collective intelligence, bridging cognitive theory and technical implementation. My methods of interest are cellular automata, lambda calculus, geometric deep learning, and algebaric topology, mainly applied to natural language, and increasingly multisensory tasks.
  </p>

  <p>This page is the beginning of a broader initiative. Future updates will include working papers, a research manifesto, collaborations, and the public front of an emerging academic lab network.</p>
</body>
</html>


" 0 1 (fontified t syntax-table (15 . 62) wrap-prefix "") 1 9 (fontified t face font-lock-keyword-face wrap-prefix "") 9 14 (fontified t wrap-prefix "") 14 15 (fontified t syntax-table (15 . 60) wrap-prefix "") 15 16 (fontified t wrap-prefix "") 16 17 (fontified t wrap-prefix "") 17 21 (fontified t face font-lock-function-name-face wrap-prefix "") 21 22 (fontified t wrap-prefix "") 22 26 (fontified t face font-lock-variable-name-face wrap-prefix "") 26 27 (fontified t wrap-prefix "") 27 31 (fontified t face font-lock-string-face wrap-prefix "") 31 33 (fontified t wrap-prefix "") 33 34 (fontified t wrap-prefix "") 34 38 (fontified t face font-lock-function-name-face wrap-prefix "") 38 40 (fontified t wrap-prefix "") 40 43 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 43 47 (fontified t face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 47 48 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 48 55 (fontified t face font-lock-variable-name-face wrap-prefix #("  " 0 2 (fontified t))) 55 56 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 56 63 (fontified t face font-lock-string-face wrap-prefix #("  " 0 2 (fontified t))) 63 65 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 65 68 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 68 72 (fontified t face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 72 73 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 73 77 (fontified t face font-lock-variable-name-face wrap-prefix #("  " 0 2 (fontified t))) 77 78 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 78 88 (fontified t face font-lock-string-face wrap-prefix #("  " 0 2 (fontified t))) 88 89 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 89 96 (fontified t face font-lock-variable-name-face wrap-prefix #("  " 0 2 (fontified t))) 96 97 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 97 134 (fontified t face font-lock-string-face wrap-prefix #("  " 0 2 (fontified t))) 134 136 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 136 139 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 139 144 (fontified t face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 144 145 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 145 178 (fontified t face (bold underline) wrap-prefix #("  " 0 2 (fontified t))) 178 180 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 180 185 (fontified t face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 185 187 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 187 189 (fontified t wrap-prefix "") 189 193 (fontified t face font-lock-function-name-face wrap-prefix "") 193 195 (fontified t wrap-prefix "") 195 196 (fontified t wrap-prefix "") 196 200 (fontified t face font-lock-function-name-face wrap-prefix "") 200 202 (fontified t wrap-prefix "") 202 205 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 205 207 (fontified t face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 207 208 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 208 242 (fontified t face (bold underline) wrap-prefix #("  " 0 2 (fontified t))) 242 244 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 244 246 (fontified t face font-lock-function-name-face wrap-prefix #("  " 0 2 (fontified t))) 246 248 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 248 251 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 251 252 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face) 252 288 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 288 294 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face) 294 295 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 295 313 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face (bold)) 313 315 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 315 321 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face) 321 328 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 328 334 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face) 334 335 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 335 356 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face (bold)) 356 358 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 358 364 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face) 364 764 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 764 765 (fontified t wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face) 765 767 (fontified t wrap-prefix #("  " 0 2 (fontified t))) 767 768 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 768 771 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 771 773 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 773 774 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 774 782 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face (bold-italic underline)) 782 784 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 784 786 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 786 788 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 788 791 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 791 792 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 792 799 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 799 805 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 805 806 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 806 823 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face (bold)) 823 825 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 825 831 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 831 863 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 863 873 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 873 950 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 950 951 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 951 1092 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1092 1104 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1104 1603 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1603 1607 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1607 1608 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 1608 1610 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1610 1611 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1611 1614 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1614 1615 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 1615 1747 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1747 1809 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1809 1810 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 1810 1812 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1812 1814 (wrap-prefix "" fontified t) 1814 1818 (wrap-prefix "" fontified t face font-lock-function-name-face) 1818 1820 (wrap-prefix "" fontified t) 1820 1822 (wrap-prefix "" fontified t) 1822 1826 (wrap-prefix "" fontified t face font-lock-function-name-face) 1826 1827 (rear-nonsticky t wrap-prefix "" fontified t) 1827 1828 (fontified t wrap-prefix "") 1828 1829 (fontified t wrap-prefix "") 1829 1830 (fontified t wrap-prefix "")) . 1) (undo-tree-id2600 . -1829) (undo-tree-id2601 . -1829) (undo-tree-id2602 . -950) (undo-tree-id2603 . -901) (undo-tree-id2604 . -1827) (undo-tree-id2605 . -1416) (undo-tree-id2606 . -1569) (undo-tree-id2607 . -1564) (undo-tree-id2608 . -1301) (undo-tree-id2609 . -1610) (undo-tree-id2610 . -1829) (undo-tree-id2611 . -1828) (undo-tree-id2612 . -1828) (undo-tree-id2613 . -1830) (undo-tree-id2614 . -1829) (undo-tree-id2615 . -1829) (undo-tree-id2616 . -1829) (undo-tree-id2617 . -1829) (undo-tree-id2618 . -1829) (undo-tree-id2619 . -1829) (undo-tree-id2620 . -1829) (undo-tree-id2621 . -1829) (undo-tree-id2622 . -1829) (undo-tree-id2623 . -1829) (undo-tree-id2624 . -1830) (undo-tree-id2625 . -1829) (undo-tree-id2626 . -1829) (undo-tree-id2627 . -1829) (undo-tree-id2628 . -1829) (undo-tree-id2629 . -1829) (undo-tree-id2630 . -1829) (undo-tree-id2631 . -1829) (undo-tree-id2632 . -1829) (undo-tree-id2633 . -1829) (undo-tree-id2634 . -1829) (undo-tree-id2635 . -1829) (undo-tree-id2636 . -1829) (undo-tree-id2637 . -1829) (undo-tree-id2638 . -1829) (undo-tree-id2639 . -1829) (undo-tree-id2640 . -1829) (undo-tree-id2641 . -1829) (undo-tree-id2642 . -1829) (undo-tree-id2643 . -1829) (undo-tree-id2644 . -1829) (undo-tree-id2645 . -1829) (undo-tree-id2646 . -1829) (undo-tree-id2647 . -1829) (undo-tree-id2648 . -1829) (undo-tree-id2649 . -1829) (undo-tree-id2650 . -1829) (undo-tree-id2651 . -1829) (undo-tree-id2652 . -1829) (undo-tree-id2653 . -1829) (undo-tree-id2654 . -1829) (undo-tree-id2655 . -1829) (undo-tree-id2656 . -1829) (undo-tree-id2657 . -1829) (undo-tree-id2658 . -1829) (undo-tree-id2659 . -1830)) nil (26767 31975 804926 0) 0 nil])
([nil nil ((260 . 279)) nil (26767 31975 804908 0) 0 nil])
([nil nil ((402 . 406) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified nil)) . 401) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (402 . 403) (400 . 402) (386 . 400) (365 . 386) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -365) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -366) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -367) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -368) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (#("b" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -369) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) 370 (366 . 370) (345 . 366) (#("n" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -345) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -346) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -347) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (#("k" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -348) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -349) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) 350 (344 . 350) (#("w" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -344) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -345) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) 346 (341 . 346) (#("w" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -341) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -342) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) 343 (337 . 343) (335 . 337) (322 . 335) (301 . 322) (280 . 301) (#("o" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -280) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -281) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) 282 (279 . 282)) nil (26767 31975 804895 0) 0 nil])
([nil nil ((493 . 494) (492 . 493) (#(">" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -492) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . 1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) 493 (492 . 493) (#(">" 0 1 (fontified nil wrap-prefix #("  " 0 2 (fontified t)))) . -492) (492 . 493) (491 . 493) (#("P" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -491) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) 492 (#("{" 0 1 (fontified nil wrap-prefix #("  " 0 2 (fontified t)))) . -492) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (#("}" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . 493) (486 . 494) (472 . 486) (#("'" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -472) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) 473 (470 . 472) (469 . 471) (#("'" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified nil syntax-table (1))) . -469) (452 . 470) (439 . 452) (418 . 439) (#("f" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -418) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -419) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) 420 (418 . 420) (#("i" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -418) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -419) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) 420 (417 . 420) (401 . 417)) nil (26767 31975 804637 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -485) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (#("t" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -486) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) 487 (481 . 487) (#("'" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -481) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) 482 (479 . 481) (478 . 480) (#("'" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified nil syntax-table (1))) . -478) (469 . 479) (#("'" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)) syntax-table (1))) . -469) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (#("m" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -470) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (#(" " 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -471) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (#("g" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -472) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (#("l" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -473) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (#("a" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -474) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (#("d" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . -475) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) 476) nil (26767 31975 804556 0) 0 nil])
([nil nil ((504 . 505) (503 . 504) (502 . 504) (494 . 495) (493 . 495) (#(">" 0 1 (fontified t syntax-table (1) wrap-prefix #("  " 0 2 (fontified t)))) . -493) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) 494 (493 . 494) (#(">" 0 1 (fontified nil wrap-prefix #("  " 0 2 (fontified t)) syntax-table (1))) . -493) (493 . 494) (#("{" 0 1 (fontified nil wrap-prefix #("  " 0 2 (fontified t)))) . -493) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (#("}" 0 1 (fontified t wrap-prefix #("  " 0 2 (fontified t)))) . 494) (493 . 495)) nil (26767 31975 804311 0) 0 nil])
([nil nil ((2075 . 2076)) nil (26767 31975 804285 0) 0 nil])
([nil nil ((#("  " 0 2 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . -249) (undo-tree-id2867 . -2) 251 (249 . 251) (249 . 250) (t 26767 31975 808810 109000)) nil (26767 32047 678219 0) 0 nil])
([nil nil ((251 . 253) (#("  " 0 2 (wrap-prefix #("  " 0 2 (fontified t)) fontified nil)) . 250) (undo-tree-id2866 . -2) (250 . 253) (#("  " 0 2 (wrap-prefix #("  " 0 2 (fontified t)) fontified nil)) . 249) (249 . 251) (249 . 250)) nil (26767 32047 678218 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 508 . 509) (nil fontified nil 250 . 509) (250 . 509)) nil (26767 32047 678216 0) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (fontified t)) fontified t)) . 509) (undo-tree-id2865 . -1)) nil (26767 32047 678215 0) 0 nil])
([nil nil ((#("  
" 0 2 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 2 3 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t)) . 509) (undo-tree-id2841 . -2) (undo-tree-id2842 . 1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -2) (undo-tree-id2864 . -3)) nil (26767 32047 678213 0) 0 nil])
([nil nil ((#("  <p> After reading I, Robot, from Isaac Asimov as a child, my life never was the same. I knew back then that I wanted to become a Machine Psychologist. While people laughed about it, history did its course, and today, I think it's save to say <i>q.e.d.</i> </p>
" 0 2 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 2 3 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 3 4 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t face font-lock-function-name-face) 4 229 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 229 230 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t syntax-table (1)) 230 236 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 236 244 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 244 245 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 245 246 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t face font-lock-function-name-face) 246 247 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 247 253 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t face (italic)) 253 254 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 254 255 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 255 256 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t face font-lock-function-name-face) 256 257 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 257 258 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 258 259 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 259 260 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 260 261 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t face font-lock-function-name-face) 261 262 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t) 262 263 (wrap-prefix #("  " 0 2 (fontified nil)) fontified t)) . 509) (undo-tree-id2815 . -262) (undo-tree-id2816 . 263) (undo-tree-id2817 . -31) (undo-tree-id2818 . -255) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -262) (undo-tree-id2840 . -263)) nil (26767 32047 678200 0) 0 nil])
([nil nil ((2073 . 2075) (t 26767 32047 682118 916000)) nil (26767 32322 497312 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4782 . 4783) (nil fontified nil 2075 . 4783) (2075 . 4783)) nil (26767 32322 497312 0) 0 nil])
([nil nil ((#("<!DOCTYPE html>
<html lang=\"en\">
<head>
  <meta charset=\"UTF-8\">
  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">
  <title>Peter Romero — Machine Psychology</title>
</head>
<body>
  <h1>Machine Psychology & Consciousness</h1>

 <p>After reading Isaac Asimov’s <em>I, Robot</em> as a child, my life was never the same. I knew even then that I wanted to become a machine psychologist. While others laughed, history took its course. Today, I believe it is fair to say: <em>q.e.d.</em></p>
    
  <p>This site marks the foundation of <strong>Machine Psychology</strong> and <strong>Machine Consciousness</strong> as unified research domains. Together, they explore the behavioral, cognitive, and phenomenological dimensions of artificial systems. Drawing on rigorous methodologies from psychometrics, neuroscience, AI safety, and AI evaluation, these fields aim to establish principled frameworks for understanding, evaluating, and shaping the behavior and internal representations of intelligent machines.</p>

  <h2>About Me</h2>
  <p>I am <strong>Peter Romero, PhD</strong>, an AI scientist at VRAIN and Researcher & People Analytics Lead at The Psychometrics Centre, University of Cambridge. My work focuses on applying psychometrics to AI systems, developing novel methods to model synthetic latent traits, and evaluating emergent -- particularly collective -- behaviors in large language models and artificial agents. I was among the first to study split personality, behavioral shaping, and latent trait modulation in LLMs. I also work on machine consciousness and collective intelligence, bridging cognitive theory and technical implementation. Methodologically, I draw on cellular automata, lambda calculus, geometric deep learning, and algebraic topology—applied to natural language and, increasingly, multisensory tasks.</p>

  <p>This page is the beginning of a broader initiative. Future updates will include working papers, a research manifesto, collaborations, and the public front of an emerging academic lab network.</p>
</body>
</html>


" 0 1 (fontified t wrap-prefix "" syntax-table (15 . 62)) 1 9 (fontified t wrap-prefix "" face font-lock-keyword-face) 9 14 (fontified t wrap-prefix "") 14 15 (fontified t wrap-prefix "" syntax-table (15 . 60)) 15 16 (fontified t wrap-prefix "") 16 17 (wrap-prefix "" fontified t) 17 21 (wrap-prefix "" fontified t face font-lock-function-name-face) 21 22 (wrap-prefix "" fontified t) 22 26 (wrap-prefix "" fontified t face font-lock-variable-name-face) 26 27 (wrap-prefix "" fontified t) 27 31 (wrap-prefix "" fontified t face font-lock-string-face) 31 33 (wrap-prefix "" fontified t) 33 34 (wrap-prefix "" fontified t) 34 38 (wrap-prefix "" fontified t face font-lock-function-name-face) 38 40 (wrap-prefix "" fontified t) 40 43 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 43 47 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 47 48 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 48 55 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-variable-name-face) 55 56 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 56 63 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-string-face) 63 65 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 65 68 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 68 72 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 72 73 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 73 77 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-variable-name-face) 77 78 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 78 88 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-string-face) 88 89 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 89 96 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-variable-name-face) 96 97 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 97 134 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-string-face) 134 136 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 136 139 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 139 144 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 144 145 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 145 178 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face (bold underline)) 178 180 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 180 185 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 185 187 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 187 189 (wrap-prefix "" fontified t) 189 193 (wrap-prefix "" fontified t face font-lock-function-name-face) 193 195 (wrap-prefix "" fontified t) 195 196 (wrap-prefix "" fontified t) 196 200 (wrap-prefix "" fontified t face font-lock-function-name-face) 200 202 (wrap-prefix "" fontified t) 202 205 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 205 207 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 207 208 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 208 242 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face (bold underline)) 242 244 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 244 246 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 246 248 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 248 249 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 249 251 (fontified t wrap-prefix #(" " 0 1 (fontified t))) 251 252 (fontified t face font-lock-function-name-face wrap-prefix #(" " 0 1 (fontified t))) 252 283 (fontified t wrap-prefix #(" " 0 1 (fontified t))) 283 285 (fontified t face font-lock-function-name-face wrap-prefix #(" " 0 1 (fontified t))) 285 286 (fontified t wrap-prefix #(" " 0 1 (fontified t))) 286 294 (fontified t face (italic) wrap-prefix #(" " 0 1 (fontified t))) 294 296 (fontified t wrap-prefix #(" " 0 1 (fontified t))) 296 298 (fontified t face font-lock-function-name-face wrap-prefix #(" " 0 1 (fontified t))) 298 489 (fontified t wrap-prefix #(" " 0 1 (fontified t))) 489 491 (fontified t face font-lock-function-name-face wrap-prefix #(" " 0 1 (fontified t))) 491 492 (fontified t wrap-prefix #(" " 0 1 (fontified t))) 492 498 (fontified t face (italic) wrap-prefix #(" " 0 1 (fontified t))) 498 500 (fontified t wrap-prefix #(" " 0 1 (fontified t))) 500 502 (fontified t face font-lock-function-name-face wrap-prefix #(" " 0 1 (fontified t))) 502 505 (fontified t wrap-prefix #(" " 0 1 (fontified t))) 505 506 (fontified t face font-lock-function-name-face wrap-prefix #(" " 0 1 (fontified t))) 506 507 (fontified t wrap-prefix #(" " 0 1 (fontified t))) 507 508 (fontified t rear-nonsticky t wrap-prefix #(" " 0 1 (fontified t))) 508 512 (wrap-prefix #("    " 0 4 (fontified nil)) fontified t) 512 513 (wrap-prefix #("    " 0 4 (fontified nil)) fontified t) 513 516 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 516 517 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 517 553 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 553 559 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 559 560 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 560 578 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face (bold)) 578 580 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 580 586 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 586 593 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 593 599 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 599 600 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 600 621 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face (bold)) 621 623 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 623 629 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 629 1026 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1026 1027 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 1027 1029 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1029 1030 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1030 1033 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1033 1035 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 1035 1036 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1036 1044 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face (bold-italic underline)) 1044 1046 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1046 1048 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 1048 1050 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1050 1053 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1053 1054 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 1054 1061 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1061 1067 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 1067 1068 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1068 1085 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face (bold)) 1085 1087 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1087 1093 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 1093 1742 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1742 1745 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1745 1769 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1769 1771 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1771 1851 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1851 1852 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 1852 1854 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1854 1855 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1855 1858 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 1858 1859 (wrap-prefix #("  " 0 2 (fontified t)) fontified t face font-lock-function-name-face) 1859 2008 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 2008 2013 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 2013 2053 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 2053 2054 (wrap-prefix #("  " 0 2 (fontified t)) face font-lock-function-name-face fontified t) 2054 2056 (wrap-prefix #("  " 0 2 (fontified t)) fontified t) 2056 2058 (wrap-prefix "" fontified t) 2058 2062 (wrap-prefix "" fontified t face font-lock-function-name-face) 2062 2064 (wrap-prefix "" fontified t) 2064 2066 (wrap-prefix "" fontified t) 2066 2070 (wrap-prefix "" fontified t face font-lock-function-name-face) 2070 2071 (rear-nonsticky t wrap-prefix "" fontified t) 2071 2072 (wrap-prefix "" fontified t) 2072 2073 (wrap-prefix "" fontified t) 2073 2074 (wrap-prefix "" fontified t)) . 1) (undo-tree-id2868 . -2073) (undo-tree-id2869 . -2073) (undo-tree-id2870 . -508) (undo-tree-id2871 . -2073) (undo-tree-id2872 . -2071) (undo-tree-id2873 . -518) (undo-tree-id2874 . -2072) (undo-tree-id2875 . -2072) (undo-tree-id2876 . -249) (undo-tree-id2877 . -508) (undo-tree-id2878 . -508) (undo-tree-id2879 . -508) (undo-tree-id2880 . -508) (undo-tree-id2881 . -508) (undo-tree-id2882 . -508) (undo-tree-id2883 . -508) (undo-tree-id2884 . -508) (undo-tree-id2885 . -508) (undo-tree-id2886 . -508) (undo-tree-id2887 . -508) (undo-tree-id2888 . -508) (undo-tree-id2889 . -508) (undo-tree-id2890 . -508) (undo-tree-id2891 . -508) (undo-tree-id2892 . -508) (undo-tree-id2893 . -508) (undo-tree-id2894 . -508) (undo-tree-id2895 . -508) (undo-tree-id2896 . -508) (undo-tree-id2897 . -508) (undo-tree-id2898 . -508) (undo-tree-id2899 . -508) (undo-tree-id2900 . -508) (undo-tree-id2901 . -508) (undo-tree-id2902 . -508) (undo-tree-id2903 . -508) (undo-tree-id2904 . -508) (undo-tree-id2905 . -508) (undo-tree-id2906 . -508) (undo-tree-id2907 . -508) (undo-tree-id2908 . -508) (undo-tree-id2909 . -508) (undo-tree-id2910 . -508) (undo-tree-id2911 . -508) (undo-tree-id2912 . -508) (undo-tree-id2913 . -508) (undo-tree-id2914 . -508) (undo-tree-id2915 . -508) (undo-tree-id2916 . -508) (undo-tree-id2917 . -508) (undo-tree-id2918 . -508) (undo-tree-id2919 . -508) (undo-tree-id2920 . -508) (undo-tree-id2921 . -508) (undo-tree-id2922 . -508) (undo-tree-id2923 . -508) (undo-tree-id2924 . -508) (undo-tree-id2925 . -508) (undo-tree-id2926 . -508) (undo-tree-id2927 . -508) (undo-tree-id2928 . -508) (undo-tree-id2929 . -508) (undo-tree-id2930 . -508) (undo-tree-id2931 . -508) (undo-tree-id2932 . -508) (undo-tree-id2933 . -508) (undo-tree-id2934 . -508) (undo-tree-id2935 . -508) (undo-tree-id2936 . -508) (undo-tree-id2937 . -508) (undo-tree-id2938 . -508) (undo-tree-id2939 . -508) (undo-tree-id2940 . -508) (undo-tree-id2941 . -508) (undo-tree-id2942 . -508) (undo-tree-id2943 . -508) (undo-tree-id2944 . -508) (undo-tree-id2945 . -508) (undo-tree-id2946 . -508) (undo-tree-id2947 . -508) (undo-tree-id2948 . -508) (undo-tree-id2949 . -508) (undo-tree-id2950 . -508) (undo-tree-id2951 . -508) (undo-tree-id2952 . -508) (undo-tree-id2953 . -508) (undo-tree-id2954 . -508) (undo-tree-id2955 . -508) (undo-tree-id2956 . -508) (undo-tree-id2957 . -508) (undo-tree-id2958 . -508) (undo-tree-id2959 . -508) (undo-tree-id2960 . -508) (undo-tree-id2961 . -508) (undo-tree-id2962 . -508) (undo-tree-id2963 . -508) (undo-tree-id2964 . -508) (undo-tree-id2965 . -508) (undo-tree-id2966 . -508) (undo-tree-id2967 . -508) (undo-tree-id2968 . -508) (undo-tree-id2969 . -508) (undo-tree-id2970 . -508) (undo-tree-id2971 . -508) (undo-tree-id2972 . -508) (undo-tree-id2973 . -508) (undo-tree-id2974 . -508) (undo-tree-id2975 . -508) (undo-tree-id2976 . -508) (undo-tree-id2977 . -508) (undo-tree-id2978 . -508) (undo-tree-id2979 . -508) (undo-tree-id2980 . -508) (undo-tree-id2981 . -508) (undo-tree-id2982 . -508) (undo-tree-id2983 . -508) (undo-tree-id2984 . -508) (undo-tree-id2985 . -508) (undo-tree-id2986 . -508) (undo-tree-id2987 . -508) (undo-tree-id2988 . -508) (undo-tree-id2989 . -508) (undo-tree-id2990 . -508) (undo-tree-id2991 . -508) (undo-tree-id2992 . -508) (undo-tree-id2993 . -508) (undo-tree-id2994 . -508) (undo-tree-id2995 . -508) (undo-tree-id2996 . -508) (undo-tree-id2997 . -508) (undo-tree-id2998 . -508) (undo-tree-id2999 . -508) (undo-tree-id3000 . -508) (undo-tree-id3001 . -508) (undo-tree-id3002 . -508) (undo-tree-id3003 . -508) (undo-tree-id3004 . -508) (undo-tree-id3005 . -508) (undo-tree-id3006 . -508) (undo-tree-id3007 . -508) (undo-tree-id3008 . -508) (undo-tree-id3009 . -508) (undo-tree-id3010 . -508) (undo-tree-id3011 . -508) (undo-tree-id3012 . -508) (undo-tree-id3013 . -508) (undo-tree-id3014 . -508) (undo-tree-id3015 . -508) (undo-tree-id3016 . -508) (undo-tree-id3017 . -508) (undo-tree-id3018 . -508) (undo-tree-id3019 . -508) (undo-tree-id3020 . -508) (undo-tree-id3021 . -508) (undo-tree-id3022 . -508) (undo-tree-id3023 . -508) (undo-tree-id3024 . -508) (undo-tree-id3025 . -508) (undo-tree-id3026 . -508) (undo-tree-id3027 . -508) (undo-tree-id3028 . -508) (undo-tree-id3029 . -508) (undo-tree-id3030 . -508) (undo-tree-id3031 . -508) (undo-tree-id3032 . -508) (undo-tree-id3033 . -508) (undo-tree-id3034 . -508) (undo-tree-id3035 . -508) (undo-tree-id3036 . -508) (undo-tree-id3037 . -508) (undo-tree-id3038 . -508) (undo-tree-id3039 . -508) (undo-tree-id3040 . -508) (undo-tree-id3041 . -508) (undo-tree-id3042 . -508) (undo-tree-id3043 . -508) (undo-tree-id3044 . -508) (undo-tree-id3045 . -508) (undo-tree-id3046 . -508) (undo-tree-id3047 . -508) (undo-tree-id3048 . -508) (undo-tree-id3049 . -508) (undo-tree-id3050 . -508) (undo-tree-id3051 . -508) (undo-tree-id3052 . -508) (undo-tree-id3053 . -508) (undo-tree-id3054 . -508) (undo-tree-id3055 . -508) (undo-tree-id3056 . -508) (undo-tree-id3057 . -508) (undo-tree-id3058 . -508) (undo-tree-id3059 . -508) (undo-tree-id3060 . -508) (undo-tree-id3061 . -508) (undo-tree-id3062 . -508) (undo-tree-id3063 . -508) (undo-tree-id3064 . -508) (undo-tree-id3065 . -508) (undo-tree-id3066 . -508) (undo-tree-id3067 . -508) (undo-tree-id3068 . -508) (undo-tree-id3069 . -508) (undo-tree-id3070 . -508) (undo-tree-id3071 . -508) (undo-tree-id3072 . -508) (undo-tree-id3073 . -508) (undo-tree-id3074 . -508) (undo-tree-id3075 . -508) (undo-tree-id3076 . -508) (undo-tree-id3077 . -508) (undo-tree-id3078 . -508) (undo-tree-id3079 . -508) (undo-tree-id3080 . -508) (undo-tree-id3081 . -508) (undo-tree-id3082 . -508) (undo-tree-id3083 . -508) (undo-tree-id3084 . -508) (undo-tree-id3085 . -508) (undo-tree-id3086 . -508) (undo-tree-id3087 . -508) (undo-tree-id3088 . -508) (undo-tree-id3089 . -508) (undo-tree-id3090 . -508) (undo-tree-id3091 . -508) (undo-tree-id3092 . -508) (undo-tree-id3093 . -508) (undo-tree-id3094 . -508) (undo-tree-id3095 . -508) (undo-tree-id3096 . -508) (undo-tree-id3097 . -508) (undo-tree-id3098 . -508) (undo-tree-id3099 . -508) (undo-tree-id3100 . -508) (undo-tree-id3101 . -508) (undo-tree-id3102 . -508) (undo-tree-id3103 . -508) (undo-tree-id3104 . -508) (undo-tree-id3105 . -508) (undo-tree-id3106 . -508) (undo-tree-id3107 . -508) (undo-tree-id3108 . -508) (undo-tree-id3109 . -508) (undo-tree-id3110 . -508) (undo-tree-id3111 . -249) (undo-tree-id3112 . -508) (undo-tree-id3113 . -508) (undo-tree-id3114 . -2072) (undo-tree-id3115 . -2072) (undo-tree-id3116 . -2072) (undo-tree-id3117 . -2072) (undo-tree-id3118 . -2072) (undo-tree-id3119 . -2072) (undo-tree-id3120 . -2072) (undo-tree-id3121 . -2072) (undo-tree-id3122 . -2072) (undo-tree-id3123 . -2072) (undo-tree-id3124 . -2072) (undo-tree-id3125 . -2072) (undo-tree-id3126 . -2072) (undo-tree-id3127 . -2072) (undo-tree-id3128 . -2072) (undo-tree-id3129 . -2072) (undo-tree-id3130 . -2072) (undo-tree-id3131 . -2072) (undo-tree-id3132 . -2072) (undo-tree-id3133 . -2072) (undo-tree-id3134 . -2072) (undo-tree-id3135 . -2072) (undo-tree-id3136 . 2) (undo-tree-id3137 . -2073) (undo-tree-id3138 . -2073) (undo-tree-id3139 . -2073) (undo-tree-id3140 . -2073) (undo-tree-id3141 . -2073) (undo-tree-id3142 . -2073) (undo-tree-id3143 . -2073) (undo-tree-id3144 . -2073) (undo-tree-id3145 . -2073) (undo-tree-id3146 . -2073) (undo-tree-id3147 . -2073) (undo-tree-id3148 . 1) (undo-tree-id3149 . -2074) (undo-tree-id3150 . -2074) (undo-tree-id3151 . -2074) (undo-tree-id3152 . -2074) (undo-tree-id3153 . -2074) (undo-tree-id3154 . -2074) (undo-tree-id3155 . -2074) (undo-tree-id3156 . -2074) (undo-tree-id3157 . -2074) (undo-tree-id3158 . -2074) (undo-tree-id3159 . -2074) (undo-tree-id3160 . -2074) (undo-tree-id3161 . -2074) (undo-tree-id3162 . -2074) (undo-tree-id3163 . -2074) (undo-tree-id3164 . -2074) (undo-tree-id3165 . -2074) (undo-tree-id3166 . -2074) (undo-tree-id3167 . -2074) (undo-tree-id3168 . -2074) (undo-tree-id3169 . -2074) (undo-tree-id3170 . -2074) (undo-tree-id3171 . -508) (undo-tree-id3172 . -2074) (undo-tree-id3173 . -2074) (undo-tree-id3174 . -2073) (undo-tree-id3175 . -2073) (undo-tree-id3176 . -2073) (undo-tree-id3177 . -2073) (undo-tree-id3178 . -2073) (undo-tree-id3179 . -2073) (undo-tree-id3180 . -2073) (undo-tree-id3181 . -2073) (undo-tree-id3182 . -2073) (undo-tree-id3183 . -2073) (undo-tree-id3184 . -2074) (undo-tree-id3185 . -2073) (undo-tree-id3186 . -2073) (undo-tree-id3187 . -2073) (undo-tree-id3188 . -2073) (undo-tree-id3189 . -2073) (undo-tree-id3190 . -2073) (undo-tree-id3191 . -2073) (undo-tree-id3192 . -2073) (undo-tree-id3193 . -2073) (undo-tree-id3194 . -2073) (undo-tree-id3195 . -2073) (undo-tree-id3196 . -2073) (undo-tree-id3197 . -2073) (undo-tree-id3198 . -2073) (undo-tree-id3199 . -2073) (undo-tree-id3200 . -2073) (undo-tree-id3201 . -2073) (undo-tree-id3202 . -2073) (undo-tree-id3203 . -2073) (undo-tree-id3204 . -2073) (undo-tree-id3205 . -2073) (undo-tree-id3206 . -2073) (undo-tree-id3207 . -2073) (undo-tree-id3208 . -2073) (undo-tree-id3209 . -2073) (undo-tree-id3210 . -2073) (undo-tree-id3211 . -2073) (undo-tree-id3212 . -2073) (undo-tree-id3213 . -2073) (undo-tree-id3214 . -2074)) nil (26767 32322 497306 0) 0 nil])
([nil nil ((2709 . 2710)) nil (26767 32322 497177 0) 0 nil])
([nil nil ((747 . 756) (740 . 747) (#("o" 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t face font-lock-string-face)) . -740) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t face font-lock-string-face)) . -741) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t face font-lock-string-face)) . -742) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t face font-lock-string-face)) . -743) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t face font-lock-string-face)) . -744) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t face font-lock-string-face)) . -745) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t face font-lock-string-face)) . -746) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (#("." 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t face font-lock-string-face)) . -747) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (#("j" 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t face font-lock-string-face)) . -748) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (#("p" 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t face font-lock-string-face)) . -749) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (#("g" 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t face font-lock-string-face)) . -750) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) 751 (t 26767 32322 501533 920000)) nil (26767 32333 701955 0) 0 nil])
([nil nil ((775 . 780) (t 26767 32333 706612 299000)) nil (26767 32347 280946 0) 0 nil])
([nil nil ((2419 . 2422) (#("—" 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t)) . -2419) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) 2420 (t 26767 32347 285804 981000)) nil (26767 36837 549943 0) 0 nil])
([nil current ((2022 . 2025) (#("—" 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t)) . -2022) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) 2023 (1996 . 1999) (#("—" 0 1 (wrap-prefix #("    " 0 4 (fontified t)) fontified t)) . -1996) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) 1997 (t 26767 36837 554837 32000)) nil (26767 36855 756127 0) 0 nil])
nil
